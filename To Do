***BIG CHANGES***

 - Add convergence hacks to the multithreaded algorithm.
 - Score keyboards using a cost array instead of repeatedly re-calculating costs.
 - Use trigraphs; try to make a layout with two rolls on one hand plus one key on the other. Do something like Carpalx.
 - Make it easier to add new physical keyboard types.
 - Write a subroutine that automatically generates a .keylayout file for any platform.

***SMALL CHANGES***

 - Some small percentage of the time in GTB, run GTBBruteForce.
 - Instead of running GTB on the single best every time, run it on the best of the run with some probability.
 - Check to see which keys change between best layouts, and integrate that into smartMutate().
 - Moving further along one hand costs more. For example, moving from a pinky to an index finger costs more than moving from a middle finger to an index finger.
 - Every movement from one finger to another has its own specific cost.
 - Create an option to not use shifted keys.
 

***BUGS***

 - shortcutCosts only works for FK_NO.
 - Numbers don't always stay where they are supposed to. On Kinesis, the keys get shifted over so that 2 is where 1 should be, 3 is where 2 should be, etc.
 - preCalculateFitness() causes layouts to be scored incorrectly.
 - runAlgorithm() occasionally prints the same layout twice in a row.

Possibly Fixed: 
 - Parallel parentheses don't work on the standard keyboard, only Kinesis.
 - After the algorithm runs for a while, either a character is duplicated or a character that's not supposed to be on the keyboard somehow creeps in.


***MISCELLANEOUS***

 - Convert layouts in allLayouts.txt to full-layout form.


***THUMBS***

 - Implement tab and thumb keys for the standard keyboard.