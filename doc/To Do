***BIG CHANGES***

 - Run the program through Valgrind and clean it up.
 - Add unit tests.
 - Add convergence hacks to the multithreaded algorithm.
 - Score keyboards using a cost array instead of repeatedly re-calculating costs.
 - Use trigraphs; try to make a layout with two rolls on one hand plus one key on the other. Do something like Carpalx.
 - Make it easier to add new physical keyboard types.
 - Write a subroutine that automatically generates a .keylayout file for any platform.
- Implement tab and thumb keys for the standard keyboard.

***SMALL CHANGES***

 - In GTBRec(), if GTBBruteForce() runs, it could take a longer or shorter amount of time than everything else. Try to minimize downtime.
 - Instead of running GTB on the single best every time, run it on the best of the run with some probability.
 - Check to see which keys change between best layouts, and integrate that into smartMutate().
 - Moving further along one hand costs more. For example, moving from a pinky to an index finger costs more than moving from a middle finger to an index finger.
 - Every movement from one finger to another has its own specific cost.
 - Create an option to not use shifted keys.
 

***REFACTORING***

 - Refactor diKeys and diValues to be a struct instead of two arrays.
 - Add #ifndef __TOOLS_H__ etc to .h files.
 - Where I read in numbers using atoi() and overly complicated functions to test if something's a number, I could just use scanf().
 - Modify code to take advantage of C99.
 - Change initTypingData() to avoid repetition.
 - Make getCommands() less messy.
 - Don't re-read typing data files every time setksize() is called.


***BUGS***

 - GTBBF() sometimes duplicates a character. Re-enable it and fix bugs.
 - shortcutCosts only works for K_NO.
 - runAlgorithm() occasionally prints the same layout twice in a row.


***MISCELLANEOUS***

 - Convert layouts in allLayouts.txt to full-layout form.



