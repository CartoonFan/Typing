***BIG CHANGES***

 - Add unit tests.
 - Add convergence hacks to the multithreaded algorithm.
 - Use trigraphs; try to make a layout with two rolls on one hand plus one key on the other. Do something like Carpalx.
 - Make it easier to add new physical keyboard types.
 - Write a subroutine that automatically generates a .keylayout file for any platform.
- Implement tab and thumb keys for the standard keyboard.

***SMALL CHANGES***

 - In GTBRec(), if GTBBruteForce() runs, it could take a longer or shorter amount of time than everything else. Try to minimize downtime for multithreading.
 - Instead of running GTB on the single best every time, run it on the best of the run with some probability.
 - Check to see which keys change between best layouts, and integrate that into smartMutate().
 - Moving further along one hand costs more. For example, moving from a pinky to an index finger costs more than moving from a middle finger to an index finger.
 - Every movement from one finger to another has its own specific cost.
 - Create an option to not use shifted keys.


***REFACTORING***

 - Modify code to take advantage of C99.
 - Change initTypingData() to avoid repetition.
 - Make getCommands() less messy.
 - Run the program through Valgrind and clean it up.
 - Don't re-read typing data files or do other redundant tasks every time setksize() is called.
 - Inline common functions.
 - Use bools instead of ints where possible.
 - Make functions statis where possible.
 - For functions that don't modify Keyboard k, pass it in directly instead of passing a pointer.
 - "compare" doesn't return a helpful error message. You have to type "compare ". Similarly for all inputs that require one or more arguments.


***BUGS***

 - compileTypingData() crashes.
 - GTBBF() sometimes duplicates a character. Re-enable it and fix bugs.
 - shortcutCosts only works for K_NO.
 - runAlgorithm() occasionally prints the same layout twice in a row.


***MISCELLANEOUS***

 - Convert layouts in allLayouts.txt to full-layout form.



